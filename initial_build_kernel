#!/bin/bash
# build_kernel

# Author Name: Thomas Frantz
# Date Written: 09/10/2020
# Date Last Modified: 10/10/2020
# Purpose Of The Script: To build the kernel with the specifications of the 
#                        assignment

# Description: This script will execute the following steps in sequence
#           1. Checkout the required repositories (unix_a2 & linux)
#           2. Build the kernel with the right .config file
#           3. Make a bakcup of the kernel files, and move over the new files
#           4. Install the kernel & drivers

GIT=/usr/bin/git
KERNEL=kernel7

exit_script () {
	# A helper function designed to exit with a custom message.
	echo "build_kernel failed with exit code: $?. $1"
	exit 1
}

confirm_exit_script () {
	# A helper function to propmt the user if they wish to exit. This
	# function can be used in cases where a failed command might not 
	# necessarily be fatal to the overall script.

	# Read in a response from the user
	read -r -p "The previous command has just failed (Exit Code: $?; $1). Do you wish to continue? [Y/n] " response
	
	# If the repsonse is yes or some variation of such, then continue on.
	# Otherwise, exit script as appropriate
	if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]
	then
		echo "Continuing ..."
	else
		exit_script "$1"
	fi
}

apply_backup_exit () {
	sudo cp ./backup/boot/ /boot/
	exit_script "There was a fatal error. The backup of the kernel was reinstated. Your pi(e) is safe."
}

# Clone the neccesary repositories.
$GIT clone git@github.com:Black-Tomcat/unix-ass-2.git || confirm_exit_script "Could not clone assignment repository"
$GIT clone --depth=1 git@github.com:raspberrypi/linux.git || confirm_exit_script "Could not clone linux repository"

# Install prerequisites.
sudo apt install raspberrypi-kernel-headers build-essential bc git wget bison flex libssl-dev make     

# Create .config file for linux. 
(cd linux; make bcm2709_defconfig || exit_script "make bcm2709_defconfig (.config) failed!")

# Install more prerequisites. TODO merge this with above prereqs.
sudo apt-get install qt5-\*-dev

# Change CONFIG_LOCALVERSION to "-v7-s3719834" to change the uname
(cd linux; make xconfig || confirm_exit_script "make xconfig failed!")

# Compile the kernal source code!
(cd linux; make -j4 zImage modules dtbs)

# Install the new files in their final destination
# Copy the necessary files to a backup folder
cp -r /boot/ ./backup/boot/ || exit_script "Could not copy files to backup location!"

# Run the final make for linux
(cd linux; sudo make modules_install || exit_script "make modules_install failed!")

# Move the linux files from the build to their new locations.
(
cd linux; 
sudo cp arch/arm/boot/dts/*.dtb /boot/ || apply_backup_exit;
sudo cp arch/arm/boot/dts/overlays/*.dtb* /boot/overlays/ || apply_backup_exit;
sudo cp arch/arm/boot/dts/overlays/README /boot/overlays/ || apply_backup_exit;
sudo cp arch/arm/boot/zImage /boot/$KERNEL.img || apply_backup_exit
)

